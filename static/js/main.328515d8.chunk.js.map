{"version":3,"sources":["components/input-field/icon-trash.svg","components/input-field/InputField.js","components/upload-file/UploadFile.js","api/index.js","components/submission-form/SubmissionForm.js","components/contests/Contests.js","components/result-item/ResultItem.js","components/results/Results.js","components/toaster/Toaster.js","App.js","reportWebVitals.js","index.js"],"names":["FileInfo","size","file","reset","src","TrashIcon","className","onClick","alt","name","toFixed","InputField","onChangeFile","id","useState","selectedFile","setSelectedFile","type","onChange","event","files","target","accept","htmlFor","UploadFile","info","label","inputId","axios","create","baseURL","FILES","INITIAL_SELECTED_FILES","noFileChoosed","obj","key","SubmissionForm","show","handleClose","onNewSubmission","loading","setLoading","selectedFiles","setSelectedFiles","uploadFile","a","formData","FormData","append","api","post","response","data","console","log","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","map","index","Footer","Button","variant","disabled","Spinner","as","animation","role","Contests","setShow","ResultItem","result","value","Results","results","fileResults","total","Card","images","200","500","Toaster","message","status","INITIAL_RESULT","App","setResults","hasError","setHasError","newSubmissionResults","setTimeout","newResults","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.328515d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-trash.7a6bde0b.svg\";","import { useState } from 'react';\r\nimport TrashIcon from './icon-trash.svg';\r\nimport './InputField.css';\r\n\r\n\r\nconst FileInfo = ({file, reset}) => {\r\n\r\n    const getFileSizeInKB = (size) => {\r\n        return (size / 1000).toFixed(2);\r\n    }\r\n\r\n    if(!file) return null;\r\n    return (\r\n        <>\r\n            <img src={TrashIcon} className=\"trash-icon\" onClick={reset} alt=\"Trash Icon\"/>\r\n            <p className=\"file-name\"> {file.name} - {getFileSizeInKB(file.size)}KB</p>\r\n        </>\r\n    )\r\n}\r\n\r\nconst InputField = ({ onChangeFile, id }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const onSelectFile = (event) => {\r\n        const { files } = event.target;\r\n        setSelectedFile(files[0]);\r\n        onChangeFile(id, files[0]);\r\n    }\r\n    const unSelectFile = () => {\r\n        setSelectedFile(null);\r\n        onChangeFile(id, null);\r\n    }\r\n    return (\r\n        <div className=\"file-input\">\r\n            <input type=\"file\" id={id} className=\"file\" onChange={onSelectFile} accept=\".txt\" />\r\n            {selectedFile ? null : <label htmlFor={id}>Choose file</label>}\r\n            <FileInfo file={selectedFile} reset={unSelectFile}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InputField;\r\n","import InputField from '../input-field/InputField';\r\nimport './UploadFile.css';\r\n\r\n\r\nconst UploadFile = ({ onChangeFile, info }) => {\r\n    \r\n    return (\r\n        <div className=\"input-file-group\">\r\n            <div className=\"file-label\">{info.label}</div>\r\n            <InputField onChangeFile={onChangeFile} id={info.inputId} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadFile;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://hashcodejudge.herokuapp.com',\r\n});\r\n","import { useState } from 'react';\r\nimport { Button, Modal, Spinner } from 'react-bootstrap';\r\nimport UploadFile from '../upload-file/UploadFile';\r\nimport api from '../../api';\r\n\r\nimport './SubmissionForm.css';\r\n\r\nconst FILES = [\r\n    { label: \"A - Example\", inputId: \"a\" },\r\n    { label: \"B - Lovely landscapes\", inputId: \"b\" },\r\n    { label: \"C - Memorable moments\", inputId: \"c\" },\r\n    { label: \"D - Pet pictures\", inputId: \"d\" },\r\n    { label: \"E - Shiny selfies\", inputId: \"e\" }\r\n];\r\n\r\nconst INITIAL_SELECTED_FILES = {\r\n    \"a\": null,\r\n    \"b\": null,\r\n    \"c\": null,\r\n    \"d\": null,\r\n    \"e\": null,\r\n}\r\n\r\nconst noFileChoosed = (obj) => {\r\n    for (let key in obj) {\r\n        if (obj[key]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst SubmissionForm = ({ show, handleClose, onNewSubmission }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedFiles, setSelectedFiles] = useState(INITIAL_SELECTED_FILES);\r\n\r\n    if (!show) return null;\r\n\r\n    const onChangeFile = (id, file) => {\r\n        setSelectedFiles({ ...selectedFiles, [id]: file });\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        const formData = new FormData();\r\n        for (let key in selectedFiles) {\r\n            const file = selectedFiles[key];\r\n            if (file) {\r\n                formData.append(key, file, file.name);\r\n            }\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const response = await api.post(\"/files-upload\", formData);\r\n            onNewSubmission(response.data, false);\r\n            setSelectedFiles(INITIAL_SELECTED_FILES);\r\n            setLoading(false);\r\n            handleClose();\r\n        }\r\n        catch (error) {\r\n            setLoading(false);\r\n            onNewSubmission({}, true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show} onHide={handleClose} size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Create submission</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"subheader\">\r\n                    <b >Output files for data sets.</b> Upload the output file for at least one data set.\r\n                </div>\r\n                {FILES.map((info, index) => {\r\n                    return <UploadFile key={index} onChangeFile={onChangeFile} info={info} />\r\n                })}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"outline-success\" onClick={uploadFile} disabled={noFileChoosed(selectedFiles)}>\r\n                    {!loading && \"Submit\"}\r\n                    {loading && <> <Spinner as=\"span\" animation=\"border\" size=\"sm\"role=\"status\"/> Uploading files... </> }\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default SubmissionForm;\r\n","import { useState } from 'react';\r\nimport SubmissionForm from '../submission-form/SubmissionForm';\r\n\r\nimport './Contests.css';\r\n\r\nconst Contests = ({ onNewSubmission }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <h4 className='headline'>Qualification Round 2019</h4>\r\n            <h4>Photo slideshow</h4>\r\n            <div className=\"box-actions\">\r\n                <button className=\"new-sub\" onClick={handleShow}>\r\n                    New Submission\r\n                </button>\r\n                <SubmissionForm show={show} handleClose={handleClose} onNewSubmission={onNewSubmission} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Contests;\r\n\r\n\r\n/* <a target=\"_blank\" href=\"https://storage.googleapis.com/coding-competitions.appspot.com/HC/2020/hashcode_2020_online_qualification_round.pdf\" >\r\n                    <span class=\"mdc-button__label\">View problem</span>\r\n                </a>\r\n                <a target=\"_blank\" href=\"https://storage.googleapis.com/coding-competitions.appspot.com/HC/2020/qualification_round_2020.in.zip\">\r\n                    <span class=\"mdc-button__label\">Download file</span>\r\n                </a>  */","import './ResultItem.css';\r\n\r\nconst ResultItem = ({ result}) => {\r\n    return (\r\n        <div className=\"result-item\">\r\n            <span> {result.label}</span>\r\n            <span> <b>{result.value}</b> points</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultItem;","import Card from 'react-bootstrap/Card';\r\nimport ResultItem from '../result-item/ResultItem';\r\nimport './Results.css';\r\n\r\nconst Results = ({ results }) => {\r\n    const { fileResults, total} = results;\r\n    return (\r\n        <>\r\n            <Card className=\"results\">\r\n                <Card.Header>Score</Card.Header>\r\n                <Card.Body>\r\n                    {fileResults.map((result, index) => {\r\n                        return <ResultItem key={index} result={result} />\r\n                    })}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <ResultItem result={total} />\r\n                </Card.Footer>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Results;","import React from 'react';\r\nimport './Toaster.css'\r\n\r\nconst images = {\r\n    200: \"./assets/images/success.png\",\r\n    500: \"./assets/images/failure.png\"\r\n}\r\n\r\nconst Toaster = ({ message, status }) => {\r\n    return (\r\n        <div className=\"toaster\">\r\n            <div>\r\n                <img src={images[status]} alt='' />\r\n                <span> {message} </span>\r\n                {/* <button onClick={this.props.onClose}>\r\n                    <span>x</span>\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Toaster;","import { useState } from 'react';\nimport Contests from './components/contests/Contests';\nimport Results from './components/results/Results';\nimport Toaster from './components/toaster/Toaster'\n\nimport './App.css';\n\nconst INITIAL_RESULT = {\n  \"fileResults\": [\n    { id: \"a\", label: \"A - Example\", value: 0 },\n    { id: \"b\", label: \"B - Lovely landscapes\", value: 0 },\n    { id: \"c\", label: \"C - Memorable moments\", value: 0 },\n    { id: \"d\", label: \"D - Pet pictures\", value: 0 },\n    { id: \"e\", label: \"E - Shiny selfies\", value: 0 },\n  ],\n  \"total\": {label: \"Total score\", value: 0 }\n}\n\nconst App = () => {\n  const [results, setResults] = useState(INITIAL_RESULT);\n  const [hasError, setHasError] = useState(false);\n\n  const onNewSubmission = (newSubmissionResults, hasError) => {\n    if (hasError) {\n      setHasError(true);\n      setTimeout(() => setHasError(false), 4000);\n      return;\n    }\n    setHasError(false);\n    console.log(newSubmissionResults);\n    let newResults = [...results[\"fileResults\"]];\n    let { total } = results;\n    total.value = 0;\n    for(let key in newSubmissionResults) {\n      for(let result of newResults) {\n        if(result.id === key) {\n          result.value = newSubmissionResults[key];\n        }\n      }\n    }\n    for(let result of newResults) {\n      total.value += result.value;\n    }\n    setResults({\"fileResults\": newResults, total});\n  }\n  return (\n    <div className=\"App\">\n      <h2> Google HashCode judge system <em>(mocked)</em></h2>\n      <Contests onNewSubmission={onNewSubmission}/>\n      <Results  results={results}/>\n      {hasError && <Toaster message=\"An Error Occured. Please try again.\" status=\"500\"/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}